function [fitresult, gof] = createFit2(tc, eind, wb, x0)
%CREATEFIT1(TC,EIND,WB)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : tc
%      Y Output: eind
%      Weights : wb
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 12-Mar-2022 16:16:20


%% Fit: 'untitled fit 1'.
[xData, yData, weights] = prepareCurveData( tc, eind, wb );

% Set up fittype and options.
ft = fittype( 'm * x + i0 + (c * sin(b * x - x1) + d * cos(b * x - x2)) * exp(-(x - x0)^2/sigma^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.MaxIter = 800;
% opts.StartPoint = [0.879653724481905 0.817760559370642 0.260727999055465 0.594356250664331 0.0225125927402318 0.425259320214135 0.312718886820616 0.16148474431175 0.178766186752368];
opts.StartPoint = x0;
opts.Weights = weights;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% legend( h, 'eind vs. tc with wb', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'tc', 'Interpreter', 'none' );
% ylabel( 'eind', 'Interpreter', 'none' );
% grid on

end

