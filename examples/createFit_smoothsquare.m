function [fitresult, gof] = createFit_smoothsquare(tc, eind, wb, x00)
%CREATEFIT1(TC,EIND,WB)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : tc
%      Y Output: eind
%      Weights : wb
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 19-Mar-2022 17:38:09


%% Fit: 'untitled fit 1'.
[xData, yData, weights] = prepareCurveData( tc, eind, wb );

% Set up fittype and options.
ft = fittype( 'a*(((-1 + 2)*2*exp(60*(x - x0 - sigma/2.))*(-1 + exp(60*sigma)))./((-1 + 2 + exp(60*(x - x0 - sigma/2.))).*(-1 + 2 + exp(60*(x - x0 + sigma/2.))))) + z0', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
% opts.StartPoint = [0.3804 0.5678 0.0759];
opts.Lower = [0 0.05, -0.5, -1];
opts.StartPoint = x00;
opts.Upper= [4 2, 0.5,1];
opts.Weights = weights;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% legend( h, 'eind vs. tc with wb', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'tc', 'Interpreter', 'none' );
% ylabel( 'eind', 'Interpreter', 'none' );
% grid on
end

